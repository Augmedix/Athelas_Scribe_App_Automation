name: Go App Base Workflow

on:
  push:
    branches:
      - Go_APP_Base
  pull_request:
    branches:
      - Go_APP_Base

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9'] # or '3.10'

    steps:
    # Step 1: Checkout Repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Python Environment
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Step 3: Install Dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        

    # Step 4: Install Appium via npm
    - name: Install Appium
      run: |
        sudo apt-get update
        sudo apt-get install -y npm
        npm install -g appium

    # Step 5: Start Appium Server
    - name: Start Appium server
      run: |
        appium &
        sleep 15 # Wait for the server to start

    # Step 6: Create Directory for Allure Reports
    - name: Create Allure reports directory
      run: mkdir -p TestResults/allure-reports

    # Step 7: Run Tests with SECRET_KEY Environment Variable
    - name: Run the script with SECRET_KEY
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        pytest test/ui/testcases/test_home_screen.py --alluredir=TestResults/allure-reports

    # Step 8: Publish Allure Reports (Optional)
    - name: Publish Allure Reports
      uses: actions/upload-artifact@v3
      with:
        name: allure-results
        path: TestResults/allure-reports